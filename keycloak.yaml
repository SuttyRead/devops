#apiVersion: v1
#kind: Namespace
#metadata:
#  name: keycloak
#
#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: postgres-pvc
#  namespace: keycloak
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#
#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: keycloak-pvc
#  namespace: keycloak
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: postgres
#  namespace: keycloak
#spec:
#  ports:
#    - port: 5432
#  selector:
#    app: postgres
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: postgres
#  namespace: keycloak
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: postgres
#  template:
#    metadata:
#      labels:
#        app: postgres
#    spec:
#      containers:
#        - name: postgres
#          image: postgres:latest
#          env:
#            - name: POSTGRES_DB
#              value: keycloak
#            - name: POSTGRES_USER
#              value: keycloak
#            - name: POSTGRES_PASSWORD
#              value: password
#          volumeMounts:
#            - mountPath: /var/lib/postgresql/data
#              name: postgres-storage
#      volumes:
#        - name: postgres-storage
#          persistentVolumeClaim:
#            claimName: postgres-pvc
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: keycloak
#  namespace: keycloak
#spec:
#  ports:
#    - port: 8080
#      targetPort: 8080
#  selector:
#    app: keycloak
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: keycloak
#  namespace: keycloak
#  labels:
#    app: keycloak
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: keycloak
#  template:
#    metadata:
#      labels:
#        app: keycloak
#    spec:
#      containers:
#        - name: keycloak
#          image: quay.io/keycloak/keycloak:20.0.2
#          args: ["start", "--cache-stack=kubernetes"]
#          env:
#            - name: KEYCLOAK_ADMIN
#              value: "admin"
#            - name: KEYCLOAK_ADMIN_PASSWORD
#              value: "admin"
#            - name: KC_PROXY
#              value: "edge"
#            - name: PROXY_ADDRESS_FORWARDING
#              value: "true"
#            - name: KC_HEALTH_ENABLED
#              value: "true"
#            - name: KC_METRICS_ENABLED
#              value: "true"
#            - name: KC_HTTP_ENABLED
#              value: "true"
#            - name: KC_HOSTNAME
#              value: "keycloak.suttyread.link"
#            - name: KC_DB
#              value: "postgres"
#            - name: KC_DB_URL
#              value: "jdbc:postgresql://postgres/keycloak"
#            - name: KC_DB_USERNAME
#              value: "keycloak"
#            - name: KC_DB_PASSWORD
#              value: "password"
#            - name: jgroups.dns.query
#              value: keycloak
#          ports:
#            - name: jgroups
#              containerPort: 7600
#            - name: http
#              containerPort: 8080
#          volumeMounts:
#            - name: keycloak-storage
#              mountPath: /opt/keycloak/data
#      volumes:
#        - name: keycloak-storage
#          persistentVolumeClaim:
#            claimName: keycloak-pvc
#
#---
#
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: keycloak-ingress
#  namespace: keycloak
#  annotations:
#    kubernetes.io/ingress.class: "traefik"
#    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
#    cert-manager.io/cluster-issuer: "letsencrypt-staging"
#spec:
#  tls:
#    - hosts:
#        - keycloak.sutty.shop
#      secretName: app-tls
#  rules:
#    - host: keycloak.sutty.shop
#      http:
#        paths:
#          - pathType: Prefix
#            path: "/"
#            backend:
#              service:
#                name: keycloak
#                port:
#                  number: 8080
