#apiVersion: v1
#kind: Namespace
#metadata:
#  name: zulip
#
#---
#
#apiVersion: v1
#kind: Secret
#metadata:
#  name: zulip-secrets
#  namespace: zulip
#type: Opaque
#data:
#  DATABASE_PASSWORD: "enVsaXA="  # Замініть це реальним закодованим паролем
#  REDIS_PASSWORD: "enVsaXA="     # Замініть це реальним закодованим паролем
#  RABBITMQ_PASSWORD: "enVsaXA="  # Замініть це реальним закодованим паролем
#  MEMCACHED_PASSWORD: "enVsaXA="  # Замініть це реальним закодованим паролем
#
#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: zulip-pv-claim
#  namespace: zulip
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 10Gi
#
#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: postgres-pv-claim
#  namespace: zulip
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 5Gi
#
#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: redis-pv-claim
#  namespace: zulip
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 2Gi
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: zulip
#  namespace: zulip
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: zulip
#  template:
#    metadata:
#      labels:
#        app: zulip
#    spec:
#      containers:
#        - name: zulip
#          image: zulip/docker-zulip:7.5-0
#          env:
#            - name: SSL_CERTIFICATE_GENERATION
#              value: "self-signed"
#            - name: DB_HOST
#              value: "zulip-db"
#            - name: REDIS_HOST
#              value: "zulip-redis"
#            - name: SETTING_EXTERNAL_HOST
#              value: "zulip.suttyread.link"
#            - name: MEMCACHED_HOST
#              value: "zulip-memcached"
#            - name: RABBITMQ_HOST
#              value: "zulip-rabbitmq"
#            - name: ZULIP_AUTH_BACKENDS
#              value: "EmailAuthBackend"
#            - name: SECRETS_email_password
#              value: "123456789"
#            - name: SETTING_ZULIP_ADMINISTRATOR
#              value: "suttyread@gmail.com"
#            - name: SETTING_EMAIL_HOST
#              value: "" # E.g. 'smtp.example.com'
#            - name: SETTING_EMAIL_HOST_USER
#              value: "noreply@example.com"
#            - name: ZULIP_USER_EMAIL
#              value: "example@example.com"
#            - name: ZULIP_USER_DOMAIN
#              value: "zulip.suttyread.link"
#            - name: ZULIP_USER_PASS
#              value: "123456789"
#            - name: SECRETS_secret_key
#              valueFrom:
#                secretKeyRef:
#                  name: zulip-secrets
#                  key: REDIS_PASSWORD
#            - name: SECRETS_postgres_password
#              valueFrom:
#                secretKeyRef:
#                  name: zulip-secrets
#                  key: DATABASE_PASSWORD
#            - name: SECRETS_memcached_password
#              valueFrom:
#                secretKeyRef:
#                  name: zulip-secrets
#                  key: MEMCACHED_PASSWORD
#            - name: SECRETS_rabbitmq_password
#              valueFrom:
#                secretKeyRef:
#                  name: zulip-secrets
#                  key: RABBITMQ_PASSWORD
#            - name: SECRETS_redis_password
#              valueFrom:
#                secretKeyRef:
#                  name: zulip-secrets
#                  key: REDIS_PASSWORD
#          ports:
#            - containerPort: 80
#          volumeMounts:
#            - name: cert-volume
#              mountPath: /data/zulip.key
#              subPath: tls.key
#            - name: cert-volume
#              mountPath: /data/zulip.crt
#              subPath: tls.crt
#      volumes:
#        - name: cert-volume
#          secret:
#            secretName: app-tls
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: zulip
#  namespace: zulip
#spec:
#  selector:
#    app: zulip
#  ports:
#    - protocol: TCP
#      port: 80
#      targetPort: 80
#
#---
#
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: zulip-ingress
#  namespace: zulip
#  annotations:
#    kubernetes.io/ingress.class: traefik
#    cert-manager.io/cluster-issuer: "letsencrypt-staging"
#spec:
#  tls:
#    - hosts:
#        - zulip.suttyread.link
#      secretName: app-tls
#  rules:
#    - host: zulip.suttyread.link
#      http:
#        paths:
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: zulip
#                port:
#                  number: 80
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: zulip-db
#  namespace: zulip
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: zulip-db
#  template:
#    metadata:
#      labels:
#        app: zulip-db
#    spec:
#      containers:
#        - name: postgres
#          image: zulip/zulip-postgresql:14
#          env:
#            - name: POSTGRES_DB
#              value: zulip
#            - name: POSTGRES_USER
#              value: zulip
#            - name: POSTGRES_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: zulip-secrets
#                  key: DATABASE_PASSWORD
#          ports:
#            - containerPort: 5432
#          volumeMounts:
#            - mountPath: /var/lib/postgresql/data
#              name: postgres-storage
#      volumes:
#        - name: postgres-storage
#          persistentVolumeClaim:
#            claimName: postgres-pv-claim
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: zulip-db
#  namespace: zulip
#spec:
#  selector:
#    app: zulip-db
#  ports:
#    - protocol: TCP
#      port: 5432
#      targetPort: 5432
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: zulip-redis
#  namespace: zulip
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: zulip-redis
#  template:
#    metadata:
#      labels:
#        app: zulip-redis
#    spec:
#      containers:
#        - name: redis
#          image: redis:alpine
#          ports:
#            - containerPort: 6379
#          volumeMounts:
#            - mountPath: /data
#              name: redis-storage
#      volumes:
#        - name: redis-storage
#          persistentVolumeClaim:
#            claimName: redis-pv-claim
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: zulip-redis
#  namespace: zulip
#spec:
#  selector:
#    app: zulip-redis
#  ports:
#    - protocol: TCP
#      port: 6379
#      targetPort: 6379
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: zulip-memcached
#  namespace: zulip
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: zulip-memcached
#  template:
#    metadata:
#      labels:
#        app: zulip-memcached
#    spec:
#      containers:
#        - name: memcached
#          image: memcached:alpine
#          ports:
#            - containerPort: 11211
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: zulip-memcached
#  namespace: zulip
#spec:
#  selector:
#    app: zulip-memcached
#  ports:
#    - protocol: TCP
#      port: 11211
#      targetPort: 11211
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: zulip-rabbitmq
#  namespace: zulip
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: zulip-rabbitmq
#  template:
#    metadata:
#      labels:
#        app: zulip-rabbitmq
#    spec:
#      containers:
#        - name: rabbitmq
#          image: rabbitmq:3.8-alpine
#          ports:
#            - containerPort: 5672
#              name: amqp
#            - containerPort: 15672
#              name: management
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: zulip-rabbitmq
#  namespace: zulip
#spec:
#  selector:
#    app: zulip-rabbitmq
#  ports:
#    - name: amqp
#      protocol: TCP
#      port: 5672
#      targetPort: 5672
#    - name: management
#      protocol: TCP
#      port: 15672
#      targetPort: 15672
